

# Product Management API

Bienvenue dans le projet **Product Management API**,
une application basée sur Django pour gérer les produits.
Ce projet utilise SQLite comme base de données pour stocker les informations sur les produits.




## Installation

1. **Cloner le dépôt :**

   ```bash
   git clone https://github.com/votre-nom-utilisateur/product-management-api.git
   cd product-management-api
   ```

2. **Créer et activer un environnement virtuel :**


   python -m venv venv
   source venv/bin/activate  # Sur Windows utilisez `venv\Scripts\activate`


3. **Installer les dépendances :**


   pip install -r requirements.txt


4. **Appliquer les migrations de base de données :**


   python manage.py migrate


5. **Lancer le serveur de développement :**


   python manage.py runserver


## Fonctionnalités

- Créer, lire, mettre à jour et supprimer des produits.
- Gestion des catégories de produits.
- Recherche et filtrage de produits.

## Usage

Une fois le serveur en cours d'exécution, vous pouvez accéder à l'API à l'adresse `http://127.0.0.1:8000/api/`. Utilisez un outil comme Postman ou cURL pour interagir avec les endpoints de l'API.

## API Endpoints
http://127.0.0.1:8000/api/swagger

### Produits

- **GET /api/products/** : Liste de tous les produits.
- **GET /api/products/{id}/** : Détails d'un produit spécifique.
- **POST /api/products/** : Créer un nouveau produit.
- **PUT /api/products/{id}/** : Mettre à jour un produit existant.
- **DELETE /api/products/{id}/** : Supprimer un produit.

### Catégories

- **GET /api/categories/** : Liste de toutes les catégories.
- **GET /api/categories/{id}/** : Détails d'une catégorie spécifique.
- **POST /api/categories/** : Créer une nouvelle catégorie.
- **PUT /api/categories/{id}/** : Mettre à jour une catégorie existante.
- **DELETE /api/categories/{id}/** : Supprimer une catégorie.

## Tests

Pour exécuter les tests, utilisez la commande suivante :

```bash
python manage.py test
```

## Contribuer

Les contributions sont les bienvenues ! Pour commencer :

1. Fork le projet
2. Créer une nouvelle branche (`git checkout -b feature/amazing-feature`)
3. Committez vos changements (`git commit -m 'Add some amazing feature'`)
4. Poussez votre branche (`git push origin feature/amazing-feature`)
5. Ouvrez une Pull Request

## Licence

Ce projet est sous licence MIT. Voir le fichier [LICENSE](LICENSE) pour plus de détails.

---

Ce README fournit une base pour documenter votre projet. Vous pouvez le personnaliser en fonction des détails spécifiques de votre API, des instructions d'installation, et des fonctionnalités uniques que vous avez ajoutées.
