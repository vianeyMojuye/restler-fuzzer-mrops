Request from grammar does not exist in the Request Collection!
GET /api/products

Request from grammar does not exist in the Request Collection!
POST /api/products

Request from grammar does not exist in the Request Collection!
GET /api/products/{id}

Request from grammar does not exist in the Request Collection!
PUT /api/products/{id}

Request from grammar does not exist in the Request Collection!
PATCH /api/products/{id}

Request from grammar does not exist in the Request Collection!
DELETE /api/products/{id}

2024-08-09 17:55:43.422: Initializing: Garbage collection every 30 seconds.
2024-08-09 17:55:43.431: Generation: 1 
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('POST', '/api/products/')]
>>>>>>>>>>>>>>>
  
resp and rule, Method ->  POST
<engine.core.sequences.Sequence object at 0x0000020E69FA6FB0> []
Listes:
POST = [],
GET=[]
--------------------
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('POST', '/api/products/')]
>>>>>>>>>>>>>>>
  
resp and rule, Method ->  POST
<engine.core.sequences.Sequence object at 0x0000020E69FA6FB0> []
Listes:
POST = [],
GET=[]
--------------------
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('POST', '/api/products/')]
>>>>>>>>>>>>>>>
  
resp and rule, Method ->  POST
<engine.core.sequences.Sequence object at 0x0000020E69FA6FB0> []
Listes:
POST = [],
GET=[]
--------------------
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('POST', '/api/products/')]
>>>>>>>>>>>>>>>
  
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('POST', '/api/products/')]
>>>>>>>>>>>>>>>
  
resp and rule, Method ->  POST
<engine.core.sequences.Sequence object at 0x0000020E69FA6FB0> []
Listes:
POST = [],
GET=[]
--------------------
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('POST', '/api/products/')]
>>>>>>>>>>>>>>>
  
resp and rule, Method ->  POST
<engine.core.sequences.Sequence object at 0x0000020E69FA6FB0> []
Listes:
POST = [],
GET=[]
--------------------
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('POST', '/api/products/')]
>>>>>>>>>>>>>>>
  
resp and rule, Method ->  POST
<engine.core.sequences.Sequence object at 0x0000020E69FA6FB0> []
Listes:
POST = [],
GET=[]
--------------------
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('POST', '/api/products/')]
>>>>>>>>>>>>>>>
  
resp and rule, Method ->  POST
<engine.core.sequences.Sequence object at 0x0000020E69FA6FB0> []
Listes:
POST = [],
GET=[]
--------------------
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('POST', '/api/products/')]
>>>>>>>>>>>>>>>
  
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('GET', '/api/schema')]
>>>>>>>>>>>>>>>
  
resp and rule, Method ->  GET
<engine.core.sequences.Sequence object at 0x0000020E69F8A290> []
Listes:
POST = [],
GET=[]
--------------------
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('GET', '/api/schema')]
>>>>>>>>>>>>>>>
  
resp and rule, Method ->  GET
<engine.core.sequences.Sequence object at 0x0000020E69F8A290> []
Listes:
POST = [],
GET=[]
--------------------
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('GET', '/api/schema')]
>>>>>>>>>>>>>>>
  
resp and rule, Method ->  GET
<engine.core.sequences.Sequence object at 0x0000020E69F8A290> []
Listes:
POST = [],
GET=[]
--------------------
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('GET', '/api/schema')]
>>>>>>>>>>>>>>>
  
resp and rule, Method ->  GET
<engine.core.sequences.Sequence object at 0x0000020E69F8A290> []
Listes:
POST = [],
GET=[]
--------------------
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('GET', '/api/schema')]
>>>>>>>>>>>>>>>
  
resp and rule, Method ->  GET
<engine.core.sequences.Sequence object at 0x0000020E69F8A290> []
Listes:
POST = [],
GET=[]
--------------------
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('GET', '/api/schema')]
>>>>>>>>>>>>>>>
  
resp and rule, Method ->  GET
<engine.core.sequences.Sequence object at 0x0000020E69F8A290> []
Listes:
POST = [],
GET=[]
--------------------
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('GET', '/api/schema')]
>>>>>>>>>>>>>>>
  
resp and rule, Method ->  GET
<engine.core.sequences.Sequence object at 0x0000020E69F8A290> []
Listes:
POST = [],
GET=[]
--------------------
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('GET', '/api/schema')]
>>>>>>>>>>>>>>>
  
resp and rule, Method ->  GET
<engine.core.sequences.Sequence object at 0x0000020E69F8A290> []
Listes:
POST = [],
GET=[]
--------------------
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('GET', '/api/schema')]
>>>>>>>>>>>>>>>
  
resp and rule, Method ->  GET
<engine.core.sequences.Sequence object at 0x0000020E69F8A290> []
Listes:
POST = [],
GET=[]
--------------------
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('GET', '/api/products/')]
>>>>>>>>>>>>>>>
  
resp and rule, Method ->  GET
<engine.core.sequences.Sequence object at 0x0000020E69F8A2F0> []
Listes:
POST = [],
GET=[]
--------------------
2024-08-09 17:56:04.423: Generation: 2 
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('POST', '/api/products/'), ('PATCH', '/api/products/_READER_DELIM_api_products_post_id_READER_DELIM/')]
>>>>>>>>>>>>>>>
  
resp and rule, Method ->  PATCH
<engine.core.sequences.Sequence object at 0x0000020E69F8A8F0> []
Listes:
POST = [],
GET=[]
--------------------
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('POST', '/api/products/'), ('PATCH', '/api/products/_READER_DELIM_api_products_post_id_READER_DELIM/')]
>>>>>>>>>>>>>>>
  
resp and rule, Method ->  PATCH
<engine.core.sequences.Sequence object at 0x0000020E69F8A8F0> []
Listes:
POST = [],
GET=[]
--------------------
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('POST', '/api/products/'), ('PATCH', '/api/products/_READER_DELIM_api_products_post_id_READER_DELIM/')]
>>>>>>>>>>>>>>>
  
resp and rule, Method ->  PATCH
<engine.core.sequences.Sequence object at 0x0000020E69F8A8F0> []
Listes:
POST = [],
GET=[]
--------------------
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('POST', '/api/products/'), ('PATCH', '/api/products/_READER_DELIM_api_products_post_id_READER_DELIM/')]
>>>>>>>>>>>>>>>
  
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('POST', '/api/products/'), ('PATCH', '/api/products/_READER_DELIM_api_products_post_id_READER_DELIM/')]
>>>>>>>>>>>>>>>
  
resp and rule, Method ->  PATCH
<engine.core.sequences.Sequence object at 0x0000020E69F8A8F0> []
Listes:
POST = [],
GET=[]
--------------------
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('POST', '/api/products/'), ('PATCH', '/api/products/_READER_DELIM_api_products_post_id_READER_DELIM/')]
>>>>>>>>>>>>>>>
  
resp and rule, Method ->  PATCH
<engine.core.sequences.Sequence object at 0x0000020E69F8A8F0> []
Listes:
POST = [],
GET=[]
--------------------
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('POST', '/api/products/'), ('PATCH', '/api/products/_READER_DELIM_api_products_post_id_READER_DELIM/')]
>>>>>>>>>>>>>>>
  
resp and rule, Method ->  PATCH
<engine.core.sequences.Sequence object at 0x0000020E69F8A8F0> []
Listes:
POST = [],
GET=[]
--------------------
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('POST', '/api/products/'), ('PATCH', '/api/products/_READER_DELIM_api_products_post_id_READER_DELIM/')]
>>>>>>>>>>>>>>>
  
resp and rule, Method ->  PATCH
<engine.core.sequences.Sequence object at 0x0000020E69F8A8F0> []
Listes:
POST = [],
GET=[]
--------------------
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('POST', '/api/products/'), ('PATCH', '/api/products/_READER_DELIM_api_products_post_id_READER_DELIM/')]
>>>>>>>>>>>>>>>
  
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('POST', '/api/products/'), ('GET', '/api/products/_READER_DELIM_api_products_post_id_READER_DELIM/')]
>>>>>>>>>>>>>>>
  
resp and rule, Method ->  GET
<engine.core.sequences.Sequence object at 0x0000020E69F95120> []
Listes:
POST = [],
GET=[]
--------------------
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('POST', '/api/products/'), ('PUT', '/api/products/_READER_DELIM_api_products_post_id_READER_DELIM/')]
>>>>>>>>>>>>>>>
  
>>>>>>>>>>>>>>>
id1 = 2192
>>>>>>>>>>>>>>>
base_url = http://localhost:8000
>>>>>>>>>>>>>>>
response.body = {"id":2192,"name":"fuzzstring","description":"fuzzstring","price":"100.00","created_at":"2024-08-09T15:56:12.830467Z","updated_at":"2024-08-09T15:56:13.496329Z"}
>>>>>>>>>>>>>>>
checker_Equality Operations PUT item1  vs PUT item1  


1- Execution of PUT Request for item1:
 Request: PUT /api/products/2192/ 
 Response : {"id":2192,"name":"fuzzstring","description":"fuzzstring","price":"100.00","created_at":"2024-08-09T15:56:12.830467Z","updated_at":"2024-08-09T15:56:13.496329Z"} 


2- Execution of PUT Request for item1:
 Request: PUT /api/products/2192/ 
 data : {'id': 2192, 'name': 'fuzzstring', 'description': 'fuzzstring', 'price': '100.00', 'created_at': '2024-08-09T15:56:12.830467Z', 'updated_at': '2024-08-09T15:56:13.496329Z'} 

Response PUT Item 1 : {'id': 2192, 'name': 'fuzzstring', 'description': 'description-Randomized', 'price': '100.00', 'created_at': '2024-08-09T15:56:12.830467Z', 'updated_at': '2024-08-09T15:56:15.605639Z'} 

++++++++++++++++++++
 Bug where found ++++++++++++++++++++
  Equality relations not Respected Error in PUT item : 
 Response PUT item 1  != Response PUT Item 1 

resp and rule, Method ->  PUT
<engine.core.sequences.Sequence object at 0x0000020E69F89120> [{'status_code': '200', 'resp_body': '{"id":2192,"name":"fuzzstring","description":"fuzzstring","price":"100.00","created_at":"2024-08-09T15:56:12.830467Z","updated_at":"2024-08-09T15:56:13.496329Z"}'}]
Listes:
POST = [{'status_code': '200', 'resp_body': '{"id":2192,"name":"fuzzstring","description":"fuzzstring","price":"100.00","created_at":"2024-08-09T15:56:12.830467Z","updated_at":"2024-08-09T15:56:13.496329Z"}'}],
GET=[]
--------------------
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('POST', '/api/products/'), ('PUT', '/api/products/_READER_DELIM_api_products_post_id_READER_DELIM/')]
>>>>>>>>>>>>>>>
  
>>>>>>>>>>>>>>>
id1 = 2193
>>>>>>>>>>>>>>>
base_url = http://localhost:8000
>>>>>>>>>>>>>>>
response.body = {"id":2193,"name":"fuzzstring","description":"fuzzstring","price":"10.10","created_at":"2024-08-09T15:56:15.717767Z","updated_at":"2024-08-09T15:56:16.506625Z"}
>>>>>>>>>>>>>>>
checker_Equality Operations PUT item1  vs PUT item1  


1- Execution of PUT Request for item1:
 Request: PUT /api/products/2193/ 
 Response : {"id":2193,"name":"fuzzstring","description":"fuzzstring","price":"10.10","created_at":"2024-08-09T15:56:15.717767Z","updated_at":"2024-08-09T15:56:16.506625Z"} 


2- Execution of PUT Request for item1:
 Request: PUT /api/products/2193/ 
 data : {'id': 2193, 'name': 'fuzzstring', 'description': 'fuzzstring', 'price': '10.10', 'created_at': '2024-08-09T15:56:15.717767Z', 'updated_at': '2024-08-09T15:56:16.506625Z'} 

Response PUT Item 1 : {'id': 2193, 'name': 'fuzzstring', 'description': 'fuzzstring', 'price': '10.10', 'created_at': '2024-08-09T15:56:15.717767Z', 'updated_at': '2024-08-09T15:56:18.588080Z'} 

 Equality sequences Respected : 
 Response PUT item 1  == Response PUT Item 1 

resp and rule, Method ->  PUT
<engine.core.sequences.Sequence object at 0x0000020E69F89120> [{'status_code': '200', 'resp_body': '{"id":2192,"name":"fuzzstring","description":"fuzzstring","price":"100.00","created_at":"2024-08-09T15:56:12.830467Z","updated_at":"2024-08-09T15:56:13.496329Z"}'}, {'status_code': '200', 'resp_body': '{"id":2193,"name":"fuzzstring","description":"fuzzstring","price":"10.10","created_at":"2024-08-09T15:56:15.717767Z","updated_at":"2024-08-09T15:56:16.506625Z"}'}]
Listes:
POST = [{'status_code': '200', 'resp_body': '{"id":2192,"name":"fuzzstring","description":"fuzzstring","price":"100.00","created_at":"2024-08-09T15:56:12.830467Z","updated_at":"2024-08-09T15:56:13.496329Z"}'}, {'status_code': '200', 'resp_body': '{"id":2193,"name":"fuzzstring","description":"fuzzstring","price":"10.10","created_at":"2024-08-09T15:56:15.717767Z","updated_at":"2024-08-09T15:56:16.506625Z"}'}],
GET=[]
--------------------
POST->POST   MR Equality : OK
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('POST', '/api/products/'), ('PUT', '/api/products/_READER_DELIM_api_products_post_id_READER_DELIM/')]
>>>>>>>>>>>>>>>
  
>>>>>>>>>>>>>>>
id1 = 2193
>>>>>>>>>>>>>>>
base_url = http://localhost:8000
>>>>>>>>>>>>>>>
response.body = {"id":2193,"name":"fuzzstring","description":"fuzzstring","price":"20.00","created_at":"2024-08-09T15:56:15.717767Z","updated_at":"2024-08-09T15:56:19.138049Z"}
>>>>>>>>>>>>>>>
checker_Equality Operations PUT item1  vs PUT item1  


1- Execution of PUT Request for item1:
 Request: PUT /api/products/2193/ 
 Response : {"id":2193,"name":"fuzzstring","description":"fuzzstring","price":"20.00","created_at":"2024-08-09T15:56:15.717767Z","updated_at":"2024-08-09T15:56:19.138049Z"} 


2- Execution of PUT Request for item1:
 Request: PUT /api/products/2193/ 
 data : {'id': 2193, 'name': 'fuzzstring', 'description': 'fuzzstring', 'price': '20.00', 'created_at': '2024-08-09T15:56:15.717767Z', 'updated_at': '2024-08-09T15:56:19.138049Z'} 

Response PUT Item 1 : {'id': 2193, 'name': 'fuzzstring', 'description': 'description-Randomized', 'price': '20.00', 'created_at': '2024-08-09T15:56:15.717767Z', 'updated_at': '2024-08-09T15:56:21.214538Z'} 

++++++++++++++++++++
 Bug where found ++++++++++++++++++++
  Equality relations not Respected Error in PUT item : 
 Response PUT item 1  != Response PUT Item 1 

resp and rule, Method ->  PUT
<engine.core.sequences.Sequence object at 0x0000020E69F89120> [{'status_code': '200', 'resp_body': '{"id":2192,"name":"fuzzstring","description":"fuzzstring","price":"100.00","created_at":"2024-08-09T15:56:12.830467Z","updated_at":"2024-08-09T15:56:13.496329Z"}'}, {'status_code': '200', 'resp_body': '{"id":2193,"name":"fuzzstring","description":"fuzzstring","price":"10.10","created_at":"2024-08-09T15:56:15.717767Z","updated_at":"2024-08-09T15:56:16.506625Z"}'}, {'status_code': '200', 'resp_body': '{"id":2193,"name":"fuzzstring","description":"fuzzstring","price":"20.00","created_at":"2024-08-09T15:56:15.717767Z","updated_at":"2024-08-09T15:56:19.138049Z"}'}]
Listes:
POST = [{'status_code': '200', 'resp_body': '{"id":2192,"name":"fuzzstring","description":"fuzzstring","price":"100.00","created_at":"2024-08-09T15:56:12.830467Z","updated_at":"2024-08-09T15:56:13.496329Z"}'}, {'status_code': '200', 'resp_body': '{"id":2193,"name":"fuzzstring","description":"fuzzstring","price":"10.10","created_at":"2024-08-09T15:56:15.717767Z","updated_at":"2024-08-09T15:56:16.506625Z"}'}, {'status_code': '200', 'resp_body': '{"id":2193,"name":"fuzzstring","description":"fuzzstring","price":"20.00","created_at":"2024-08-09T15:56:15.717767Z","updated_at":"2024-08-09T15:56:19.138049Z"}'}],
GET=[]
--------------------
POST->POST   MR Equality : OK
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('POST', '/api/products/'), ('PUT', '/api/products/_READER_DELIM_api_products_post_id_READER_DELIM/')]
>>>>>>>>>>>>>>>
  
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('POST', '/api/products/'), ('PUT', '/api/products/_READER_DELIM_api_products_post_id_READER_DELIM/')]
>>>>>>>>>>>>>>>
  
>>>>>>>>>>>>>>>
id1 = 2194
>>>>>>>>>>>>>>>
base_url = http://localhost:8000
>>>>>>>>>>>>>>>
response.body = {"id":2194,"name":"fuzzstring","description":"description-Randomized","price":"99.00","created_at":"2024-08-09T15:56:21.725830Z","updated_at":"2024-08-09T15:56:22.843389Z"}
>>>>>>>>>>>>>>>
checker_Equality Operations PUT item1  vs PUT item1  


1- Execution of PUT Request for item1:
 Request: PUT /api/products/2194/ 
 Response : {"id":2194,"name":"fuzzstring","description":"description-Randomized","price":"99.00","created_at":"2024-08-09T15:56:21.725830Z","updated_at":"2024-08-09T15:56:22.843389Z"} 


2- Execution of PUT Request for item1:
 Request: PUT /api/products/2194/ 
 data : {'id': 2194, 'name': 'fuzzstring', 'description': 'description-Randomized', 'price': '99.00', 'created_at': '2024-08-09T15:56:21.725830Z', 'updated_at': '2024-08-09T15:56:22.843389Z'} 

Response PUT Item 1 : {'id': 2194, 'name': 'fuzzstring', 'description': 'description-Randomized', 'price': '99.00', 'created_at': '2024-08-09T15:56:21.725830Z', 'updated_at': '2024-08-09T15:56:24.907187Z'} 

 Equality sequences Respected : 
 Response PUT item 1  == Response PUT Item 1 

resp and rule, Method ->  PUT
<engine.core.sequences.Sequence object at 0x0000020E69F89120> [{'status_code': '200', 'resp_body': '{"id":2192,"name":"fuzzstring","description":"fuzzstring","price":"100.00","created_at":"2024-08-09T15:56:12.830467Z","updated_at":"2024-08-09T15:56:13.496329Z"}'}, {'status_code': '200', 'resp_body': '{"id":2193,"name":"fuzzstring","description":"fuzzstring","price":"10.10","created_at":"2024-08-09T15:56:15.717767Z","updated_at":"2024-08-09T15:56:16.506625Z"}'}, {'status_code': '200', 'resp_body': '{"id":2193,"name":"fuzzstring","description":"fuzzstring","price":"20.00","created_at":"2024-08-09T15:56:15.717767Z","updated_at":"2024-08-09T15:56:19.138049Z"}'}, {'status_code': '200', 'resp_body': '{"id":2194,"name":"fuzzstring","description":"description-Randomized","price":"99.00","created_at":"2024-08-09T15:56:21.725830Z","updated_at":"2024-08-09T15:56:22.843389Z"}'}]
Listes:
POST = [{'status_code': '200', 'resp_body': '{"id":2192,"name":"fuzzstring","description":"fuzzstring","price":"100.00","created_at":"2024-08-09T15:56:12.830467Z","updated_at":"2024-08-09T15:56:13.496329Z"}'}, {'status_code': '200', 'resp_body': '{"id":2193,"name":"fuzzstring","description":"fuzzstring","price":"10.10","created_at":"2024-08-09T15:56:15.717767Z","updated_at":"2024-08-09T15:56:16.506625Z"}'}, {'status_code': '200', 'resp_body': '{"id":2193,"name":"fuzzstring","description":"fuzzstring","price":"20.00","created_at":"2024-08-09T15:56:15.717767Z","updated_at":"2024-08-09T15:56:19.138049Z"}'}, {'status_code': '200', 'resp_body': '{"id":2194,"name":"fuzzstring","description":"description-Randomized","price":"99.00","created_at":"2024-08-09T15:56:21.725830Z","updated_at":"2024-08-09T15:56:22.843389Z"}'}],
GET=[]
--------------------
POST->POST   MR Equality : OK
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('POST', '/api/products/'), ('PUT', '/api/products/_READER_DELIM_api_products_post_id_READER_DELIM/')]
>>>>>>>>>>>>>>>
  
>>>>>>>>>>>>>>>
id1 = 2194
>>>>>>>>>>>>>>>
base_url = http://localhost:8000
>>>>>>>>>>>>>>>
response.body = {"id":2194,"name":"fuzzstring","description":"fuzzstring","price":"100.00","created_at":"2024-08-09T15:56:21.725830Z","updated_at":"2024-08-09T15:56:25.497598Z"}
>>>>>>>>>>>>>>>
checker_Equality Operations PUT item1  vs PUT item1  


1- Execution of PUT Request for item1:
 Request: PUT /api/products/2194/ 
 Response : {"id":2194,"name":"fuzzstring","description":"fuzzstring","price":"100.00","created_at":"2024-08-09T15:56:21.725830Z","updated_at":"2024-08-09T15:56:25.497598Z"} 


2- Execution of PUT Request for item1:
 Request: PUT /api/products/2194/ 
 data : {'id': 2194, 'name': 'fuzzstring', 'description': 'fuzzstring', 'price': '100.00', 'created_at': '2024-08-09T15:56:21.725830Z', 'updated_at': '2024-08-09T15:56:25.497598Z'} 

Response PUT Item 1 : {'id': 2194, 'name': 'fuzzstring', 'description': 'description-Randomized', 'price': '100.00', 'created_at': '2024-08-09T15:56:21.725830Z', 'updated_at': '2024-08-09T15:56:27.557709Z'} 

++++++++++++++++++++
 Bug where found ++++++++++++++++++++
  Equality relations not Respected Error in PUT item : 
 Response PUT item 1  != Response PUT Item 1 

resp and rule, Method ->  PUT
<engine.core.sequences.Sequence object at 0x0000020E69F89120> [{'status_code': '200', 'resp_body': '{"id":2192,"name":"fuzzstring","description":"fuzzstring","price":"100.00","created_at":"2024-08-09T15:56:12.830467Z","updated_at":"2024-08-09T15:56:13.496329Z"}'}, {'status_code': '200', 'resp_body': '{"id":2193,"name":"fuzzstring","description":"fuzzstring","price":"10.10","created_at":"2024-08-09T15:56:15.717767Z","updated_at":"2024-08-09T15:56:16.506625Z"}'}, {'status_code': '200', 'resp_body': '{"id":2193,"name":"fuzzstring","description":"fuzzstring","price":"20.00","created_at":"2024-08-09T15:56:15.717767Z","updated_at":"2024-08-09T15:56:19.138049Z"}'}, {'status_code': '200', 'resp_body': '{"id":2194,"name":"fuzzstring","description":"description-Randomized","price":"99.00","created_at":"2024-08-09T15:56:21.725830Z","updated_at":"2024-08-09T15:56:22.843389Z"}'}, {'status_code': '200', 'resp_body': '{"id":2194,"name":"fuzzstring","description":"fuzzstring","price":"100.00","created_at":"2024-08-09T15:56:21.725830Z","updated_at":"2024-08-09T15:56:25.497598Z"}'}]
Listes:
POST = [{'status_code': '200', 'resp_body': '{"id":2192,"name":"fuzzstring","description":"fuzzstring","price":"100.00","created_at":"2024-08-09T15:56:12.830467Z","updated_at":"2024-08-09T15:56:13.496329Z"}'}, {'status_code': '200', 'resp_body': '{"id":2193,"name":"fuzzstring","description":"fuzzstring","price":"10.10","created_at":"2024-08-09T15:56:15.717767Z","updated_at":"2024-08-09T15:56:16.506625Z"}'}, {'status_code': '200', 'resp_body': '{"id":2193,"name":"fuzzstring","description":"fuzzstring","price":"20.00","created_at":"2024-08-09T15:56:15.717767Z","updated_at":"2024-08-09T15:56:19.138049Z"}'}, {'status_code': '200', 'resp_body': '{"id":2194,"name":"fuzzstring","description":"description-Randomized","price":"99.00","created_at":"2024-08-09T15:56:21.725830Z","updated_at":"2024-08-09T15:56:22.843389Z"}'}, {'status_code': '200', 'resp_body': '{"id":2194,"name":"fuzzstring","description":"fuzzstring","price":"100.00","created_at":"2024-08-09T15:56:21.725830Z","updated_at":"2024-08-09T15:56:25.497598Z"}'}],
GET=[]
--------------------
POST->POST   MR Equality : OK
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('POST', '/api/products/'), ('PUT', '/api/products/_READER_DELIM_api_products_post_id_READER_DELIM/')]
>>>>>>>>>>>>>>>
  
>>>>>>>>>>>>>>>
id1 = 2194
>>>>>>>>>>>>>>>
base_url = http://localhost:8000
>>>>>>>>>>>>>>>
response.body = {"id":2194,"name":"fuzzstring","description":"description-Randomized","price":"10.10","created_at":"2024-08-09T15:56:21.725830Z","updated_at":"2024-08-09T15:56:28.089024Z"}
>>>>>>>>>>>>>>>
checker_Equality Operations PUT item1  vs PUT item1  


1- Execution of PUT Request for item1:
 Request: PUT /api/products/2194/ 
 Response : {"id":2194,"name":"fuzzstring","description":"description-Randomized","price":"10.10","created_at":"2024-08-09T15:56:21.725830Z","updated_at":"2024-08-09T15:56:28.089024Z"} 


2- Execution of PUT Request for item1:
 Request: PUT /api/products/2194/ 
 data : {'id': 2194, 'name': 'fuzzstring', 'description': 'description-Randomized', 'price': '10.10', 'created_at': '2024-08-09T15:56:21.725830Z', 'updated_at': '2024-08-09T15:56:28.089024Z'} 

Response PUT Item 1 : {'id': 2194, 'name': 'fuzzstring', 'description': 'description-Randomized', 'price': '10.10', 'created_at': '2024-08-09T15:56:21.725830Z', 'updated_at': '2024-08-09T15:56:30.166705Z'} 

 Equality sequences Respected : 
 Response PUT item 1  == Response PUT Item 1 

resp and rule, Method ->  PUT
<engine.core.sequences.Sequence object at 0x0000020E69F89120> [{'status_code': '200', 'resp_body': '{"id":2192,"name":"fuzzstring","description":"fuzzstring","price":"100.00","created_at":"2024-08-09T15:56:12.830467Z","updated_at":"2024-08-09T15:56:13.496329Z"}'}, {'status_code': '200', 'resp_body': '{"id":2193,"name":"fuzzstring","description":"fuzzstring","price":"10.10","created_at":"2024-08-09T15:56:15.717767Z","updated_at":"2024-08-09T15:56:16.506625Z"}'}, {'status_code': '200', 'resp_body': '{"id":2193,"name":"fuzzstring","description":"fuzzstring","price":"20.00","created_at":"2024-08-09T15:56:15.717767Z","updated_at":"2024-08-09T15:56:19.138049Z"}'}, {'status_code': '200', 'resp_body': '{"id":2194,"name":"fuzzstring","description":"description-Randomized","price":"99.00","created_at":"2024-08-09T15:56:21.725830Z","updated_at":"2024-08-09T15:56:22.843389Z"}'}, {'status_code': '200', 'resp_body': '{"id":2194,"name":"fuzzstring","description":"fuzzstring","price":"100.00","created_at":"2024-08-09T15:56:21.725830Z","updated_at":"2024-08-09T15:56:25.497598Z"}'}, {'status_code': '200', 'resp_body': '{"id":2194,"name":"fuzzstring","description":"description-Randomized","price":"10.10","created_at":"2024-08-09T15:56:21.725830Z","updated_at":"2024-08-09T15:56:28.089024Z"}'}]
Listes:
POST = [{'status_code': '200', 'resp_body': '{"id":2192,"name":"fuzzstring","description":"fuzzstring","price":"100.00","created_at":"2024-08-09T15:56:12.830467Z","updated_at":"2024-08-09T15:56:13.496329Z"}'}, {'status_code': '200', 'resp_body': '{"id":2193,"name":"fuzzstring","description":"fuzzstring","price":"10.10","created_at":"2024-08-09T15:56:15.717767Z","updated_at":"2024-08-09T15:56:16.506625Z"}'}, {'status_code': '200', 'resp_body': '{"id":2193,"name":"fuzzstring","description":"fuzzstring","price":"20.00","created_at":"2024-08-09T15:56:15.717767Z","updated_at":"2024-08-09T15:56:19.138049Z"}'}, {'status_code': '200', 'resp_body': '{"id":2194,"name":"fuzzstring","description":"description-Randomized","price":"99.00","created_at":"2024-08-09T15:56:21.725830Z","updated_at":"2024-08-09T15:56:22.843389Z"}'}, {'status_code': '200', 'resp_body': '{"id":2194,"name":"fuzzstring","description":"fuzzstring","price":"100.00","created_at":"2024-08-09T15:56:21.725830Z","updated_at":"2024-08-09T15:56:25.497598Z"}'}, {'status_code': '200', 'resp_body': '{"id":2194,"name":"fuzzstring","description":"description-Randomized","price":"10.10","created_at":"2024-08-09T15:56:21.725830Z","updated_at":"2024-08-09T15:56:28.089024Z"}'}],
GET=[]
--------------------
POST->POST   MR Equality : OK
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('POST', '/api/products/'), ('PUT', '/api/products/_READER_DELIM_api_products_post_id_READER_DELIM/')]
>>>>>>>>>>>>>>>
  
>>>>>>>>>>>>>>>
id1 = 2194
>>>>>>>>>>>>>>>
base_url = http://localhost:8000
>>>>>>>>>>>>>>>
response.body = {"id":2194,"name":"fuzzstring","description":"fuzzstring","price":"20.00","created_at":"2024-08-09T15:56:21.725830Z","updated_at":"2024-08-09T15:56:30.719904Z"}
>>>>>>>>>>>>>>>
checker_Equality Operations PUT item1  vs PUT item1  


1- Execution of PUT Request for item1:
 Request: PUT /api/products/2194/ 
 Response : {"id":2194,"name":"fuzzstring","description":"fuzzstring","price":"20.00","created_at":"2024-08-09T15:56:21.725830Z","updated_at":"2024-08-09T15:56:30.719904Z"} 


2- Execution of PUT Request for item1:
 Request: PUT /api/products/2194/ 
 data : {'id': 2194, 'name': 'fuzzstring', 'description': 'fuzzstring', 'price': '20.00', 'created_at': '2024-08-09T15:56:21.725830Z', 'updated_at': '2024-08-09T15:56:30.719904Z'} 

Response PUT Item 1 : {'id': 2194, 'name': 'fuzzstring', 'description': 'fuzzstring', 'price': '20.00', 'created_at': '2024-08-09T15:56:21.725830Z', 'updated_at': '2024-08-09T15:56:32.794539Z'} 

 Equality sequences Respected : 
 Response PUT item 1  == Response PUT Item 1 

resp and rule, Method ->  PUT
<engine.core.sequences.Sequence object at 0x0000020E69F89120> [{'status_code': '200', 'resp_body': '{"id":2192,"name":"fuzzstring","description":"fuzzstring","price":"100.00","created_at":"2024-08-09T15:56:12.830467Z","updated_at":"2024-08-09T15:56:13.496329Z"}'}, {'status_code': '200', 'resp_body': '{"id":2193,"name":"fuzzstring","description":"fuzzstring","price":"10.10","created_at":"2024-08-09T15:56:15.717767Z","updated_at":"2024-08-09T15:56:16.506625Z"}'}, {'status_code': '200', 'resp_body': '{"id":2193,"name":"fuzzstring","description":"fuzzstring","price":"20.00","created_at":"2024-08-09T15:56:15.717767Z","updated_at":"2024-08-09T15:56:19.138049Z"}'}, {'status_code': '200', 'resp_body': '{"id":2194,"name":"fuzzstring","description":"description-Randomized","price":"99.00","created_at":"2024-08-09T15:56:21.725830Z","updated_at":"2024-08-09T15:56:22.843389Z"}'}, {'status_code': '200', 'resp_body': '{"id":2194,"name":"fuzzstring","description":"fuzzstring","price":"100.00","created_at":"2024-08-09T15:56:21.725830Z","updated_at":"2024-08-09T15:56:25.497598Z"}'}, {'status_code': '200', 'resp_body': '{"id":2194,"name":"fuzzstring","description":"description-Randomized","price":"10.10","created_at":"2024-08-09T15:56:21.725830Z","updated_at":"2024-08-09T15:56:28.089024Z"}'}, {'status_code': '200', 'resp_body': '{"id":2194,"name":"fuzzstring","description":"fuzzstring","price":"20.00","created_at":"2024-08-09T15:56:21.725830Z","updated_at":"2024-08-09T15:56:30.719904Z"}'}]
Listes:
POST = [{'status_code': '200', 'resp_body': '{"id":2192,"name":"fuzzstring","description":"fuzzstring","price":"100.00","created_at":"2024-08-09T15:56:12.830467Z","updated_at":"2024-08-09T15:56:13.496329Z"}'}, {'status_code': '200', 'resp_body': '{"id":2193,"name":"fuzzstring","description":"fuzzstring","price":"10.10","created_at":"2024-08-09T15:56:15.717767Z","updated_at":"2024-08-09T15:56:16.506625Z"}'}, {'status_code': '200', 'resp_body': '{"id":2193,"name":"fuzzstring","description":"fuzzstring","price":"20.00","created_at":"2024-08-09T15:56:15.717767Z","updated_at":"2024-08-09T15:56:19.138049Z"}'}, {'status_code': '200', 'resp_body': '{"id":2194,"name":"fuzzstring","description":"description-Randomized","price":"99.00","created_at":"2024-08-09T15:56:21.725830Z","updated_at":"2024-08-09T15:56:22.843389Z"}'}, {'status_code': '200', 'resp_body': '{"id":2194,"name":"fuzzstring","description":"fuzzstring","price":"100.00","created_at":"2024-08-09T15:56:21.725830Z","updated_at":"2024-08-09T15:56:25.497598Z"}'}, {'status_code': '200', 'resp_body': '{"id":2194,"name":"fuzzstring","description":"description-Randomized","price":"10.10","created_at":"2024-08-09T15:56:21.725830Z","updated_at":"2024-08-09T15:56:28.089024Z"}'}, {'status_code': '200', 'resp_body': '{"id":2194,"name":"fuzzstring","description":"fuzzstring","price":"20.00","created_at":"2024-08-09T15:56:21.725830Z","updated_at":"2024-08-09T15:56:30.719904Z"}'}],
GET=[]
--------------------
POST->POST   MR Equality : OK
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('POST', '/api/products/'), ('PUT', '/api/products/_READER_DELIM_api_products_post_id_READER_DELIM/')]
>>>>>>>>>>>>>>>
  
>>>>>>>>>>>>>>>
 Request - Endpoint =
[('POST', '/api/products/'), ('DELETE', '/api/products/_READER_DELIM_api_products_post_id_READER_DELIM/')]
>>>>>>>>>>>>>>>
  
2024-08-09 17:56:34.652: Terminating garbage collection. Waiting for max 300 seconds. 
Done.
